import{d as K,c as y,p as U,o as l,f as W,w as E,b as I,t as x,u as p,q as G,s as H,_ as j,m as J,n as X,a as v,g as f,F as B,h as R,j as Z,e as h,R as ee,r as te,v as ne,x as ae}from"./index-jUm0nxGk.js";import{d as c,l as re,u as D}from"./db-C8CERaXs.js";import{m as g,E as _}from"./time-BmRGZSiE.js";import{u,A as oe}from"./index-xwVy6i7n.js";import{f as C,c as S,t as T}from"./iterators-PeFxZeGd.js";import{u as V}from"./index-BNLyvoft.js";const M=V("shodoku.app.preferences.limit.due",50),F=V("shodoku.app.preferences.limit.new",10);async function se(t={new:F.value,due:M.value}){return await(await c).add("review-limits",{time:new Date,count:t}),re.postMessage("review-limit-increased")}const ie={class:"card-value"},ue=K({__name:"ReviewSummaryItem",props:{cardId:{},reviews:{}},setup(t){const n=t,e=y(()=>String.fromCharCode(n.cardId)),r=y(()=>n.reviews.at(0)),o=y(()=>r.value?r.value.log.state===u.New:!1);return(i,s)=>{const a=U("RouterLink");return l(),W(a,{to:p(G)(e.value),class:H(["review-summary-item",{"is-new":o.value}])},{default:E(()=>[I("strong",ie,x(e.value),1)]),_:1},8,["to","class"])}}}),ce=j(ue,[["__scopeId","data-v-15bfc4b2"]]),we={class:"review-summary"},de={key:0},le={class:"review-count total-count"},me={class:"review-count new-count"},ve={key:1,class:"review-summary-list"},fe=K({__name:"ReviewSummary",setup(t){const n=J(),e=X(),{result:r}=D(async()=>{const s=new Map,a=(await c).transaction("reviews").store.index("review");for await(const w of a.iterate(IDBKeyRange.lowerBound(g()))){const d=w.value;let m=s.get(d.cardId);m||(m=[],s.set(d.cardId,m)),m.push(d)}return s}),o=y(()=>{if(!r.value)return 0;let s=0;for(const[a]of r.value.values())a.log.state===u.New&&(s+=1);return s});function i(){se(),n.name!==ee&&e.push(te)}return(s,a)=>(l(),v("section",we,[p(r)?(l(),v("p",de,[a[3]||(a[3]=f(" Reviewed ")),I("span",le,x(p(r).size)+" cards",1),a[4]||(a[4]=f(" today")),o.value>0?(l(),v(B,{key:0},[a[1]||(a[1]=f(" (of which ")),I("span",me,x(o.value)+" new",1),a[2]||(a[2]=f(")"))],64)):R("",!0),a[5]||(a[5]=f(". "))])):R("",!0),p(r)?(l(),v("ul",ve,[(l(!0),v(B,null,Z(p(r),([w,d])=>(l(),v("li",null,[h(ce,{"card-id":w,reviews:d},null,8,["card-id","reviews"])]))),256))])):R("",!0),a[7]||(a[7]=I("p",null," Click the button below to temporarily increase your daily review limit. ",-1)),h(oe,{onClick:a[0]||(a[0]=w=>i())},{default:E(()=>a[6]||(a[6]=[f("Continue Review")])),_:1})]))}}),Ne=j(fe,[["__scopeId","data-v-e028f67f"]]);async function*N(t){const n=new Set;let e=await(await c).transaction("progress").store.index("state+due").openCursor();for(;e;){const[r,o]=e.key;if(r<u.Learning){e=await e.continue([u.Learning,_]);continue}if(r>u.Learning&&r<u.Relearning){e=await e.continue([u.Relearning,_]);continue}if(!t||o<t){const[i]=e.primaryKey;n.has(i)||(yield e,n.add(i))}e=await e.continue()}}async function O(){const t=new Set,n=(await c).transaction("reviews").store.index("review").iterate(IDBKeyRange.lowerBound(g()));for await(const e of n)t.add(e.value.cardId);return t}async function P(){const t=new Date;return(await c).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([u.New,g()],[u.New,t],!0,!0))}async function*A(){const t=await O(),n=(await c).transaction(["cards","progress"],"readwrite"),e=n.objectStore("cards"),r=n.objectStore("progress").index("cardId+cardType+state");let o=await e.index("position").openKeyCursor(IDBKeyRange.bound([0,0],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY],!1,!0));for(;o;){if(t.has(o.primaryKey)){o=await o.continue();continue}let i=await r.openCursor([o.primaryKey,"kanji-write",u.New]);i||(i=await r.openCursor([o.primaryKey,"kanji-read",u.New])),i&&(yield i),o=await o.continue()}}async function Y(){const t=new Date;return(await c).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([u.Review,g()],[u.Review,t],!1,!0))}async function*$(){const t=new Date,n=await O(),e=(await c).transaction(["cards","progress","reviews"],"readonly"),r=e.objectStore("cards"),o=e.objectStore("progress"),i=IDBKeyRange.bound([u.Review,_],[u.Review,t],!1,!0);let s=await o.index("state+due").openCursor(i);for(;s;){const[a]=s.primaryKey;if(!n.has(a)){const w=await r.get(a);w&&w.position.priority<Number.POSITIVE_INFINITY&&(yield s)}s=await s.continue()}}async function q(){const t=await(await c).getAllFromIndex("review-limits","time",IDBKeyRange.lowerBound(g())),n={due:0,new:0};for(const{count:e}of t)n.due+=e.due,n.new+=e.new;return n}async function z(t=0){const n=await P(),e=Math.max(0,F.value+t-n);return S(T(e,A()))}async function Q(t=0){const n=await Y(),e=Math.max(0,M.value+t-n);return S(T(e,$()))}async function pe(){const t=await C(N(new Date));if(t)return t.value;const n=await q(),e=await z(n.new),r=await P(),o=await Q(n.due),i=await Y(),s=e+r,a=o+i,w=e+o,d=Math.ceil((s+a)/s),m=Math.floor(d/2);if(e>0&&(o===0||w%d===m)){const L=await C(A());if(L)return L.value}const b=await C($());if(b)return b.value;const k=await C(N());return k?k.value:null}async function ye(){const t=await q();return{new:await z(t.new),due:await Q(t.due),learning:await S(N())}}async function De(t,n,e){const r=(await c).transaction(["progress","reviews"],"readwrite"),o=r.objectStore("progress"),i=r.objectStore("reviews");await o.put({cardId:t,cardType:n,fsrs:e.card}),await i.add({cardId:t,cardType:n,log:e.log})}function Se(t){const n=y(()=>{const e=ae(t);if(e){const{cardId:r,cardType:o}=e;return async()=>(await c).get("progress",[r,o])}return pe});return D(n)}function be(){const{result:t,error:n}=D(ye);return ne(()=>{n.value&&console.error(n.value)}),t}export{Ne as R,Se as a,De as r,be as u};
