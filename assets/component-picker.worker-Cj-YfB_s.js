(function(){"use strict";function l(a,...n){return n.reduce((t,e)=>e(t),a)}function*p(...a){const n=a.map(t=>t[Symbol.iterator]());try{let t=n.map(e=>e.next());for(;!t.some(({done:e})=>e);)yield t.map(({value:e})=>e),t=n.map(e=>e.next())}finally{n.forEach(t=>{typeof t.return=="function"&&t.return()})}}function h(a){return n=>{const t=new Map;for(const e of n){const s=a(e);let r=t.get(s);r||(r=[],t.set(s,r)),r.push(e)}return t}}function m(){return a=>[...a]}function*w(a,n,t=1){let e=a,s=n;typeof e>"u"&&(s=Number.POSITIVE_INFINITY,e=0),typeof s>"u"&&(s=e,e=0);const r=e<=s?(i,o)=>i<o:(i,o)=>o<i;for(let i=e;r(i,s);i+=t)yield i}function f(){return a=>p(w(),a)}const y="␟",g="␞",S=fetch("/data/index/kanji-radicals-v1.usv").then(a=>a.text()),d=fetch("/data/index/radicals-kanji-v1.usv").then(a=>a.text());function*u(a){const n=a[Symbol.iterator]();let t=0,e=n.next();function*s(){let r=t;for(e.value===`
`&&(t+=1,r=t,e=n.next());!e.done;){const i=e.value;if(i===g){t+=i.length;return}i===y&&(yield a.slice(r,t),r=t+i.length),t+=i.length,e=n.next()}}for(;!e.done;)yield s(),e=n.next()}async function k(){const a=await d,n=new Map;for(const t of u(a)){let e="";for(const[s,r]of l(t,f()))if(s===0)e=r;else if(s===1){const i=Number.parseInt(r);let o=n.get(i);o||(o=[],n.set(i,o)),o.push(e)}}return n}async function b(a){let n=null;if(a.size===0)return new Set;let t=0,e=null;e:for(const s of u(await d))for(const[r,i]of l(s,f()))switch(r){case 0:a.has(i)?(e=i,t+=1):e=null;break;case 2:if(e){if(n){const o=new Set;for(const c of i)n.has(c)&&o.add(c);n=o}else{n=new Set;for(const o of i)n.add(o)}if(t===a.size)break e}}return n??new Set}async function N(a){const n=new Map,t=new Set;let e=0,s=null;e:for(const r of u(await S))for(const[i,o]of l(r,f()))switch(i){case 0:a.has(o)?(s=o,e+=1):s=null;break;case 1:s&&n.set(s,Number.parseInt(o));break;case 2:if(s){for(const c of o)t.add(c);if(e===a.size)break e}}return[n,t]}addEventListener("message",async a=>{if(a.data==="init"){const o={type:"all-radicals",allRadicals:await k()};self.postMessage(o);return}const n=await b(a.data),[t,e]=await N(n),r={type:"kanji-selection",kanjiSelection:l(n,h(i=>t.get(i)??NaN),m(),i=>new Map(i.sort(([o],[c])=>o-c))),filteredRadicals:e};self.postMessage(r)})})();
