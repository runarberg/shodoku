import{d as K,c as y,n as U,o as l,b as W,w as E,f as I,t as x,u as p,p as G,q as H,_ as j,l as J,m as X,a as m,e as v,F as B,g as R,i as Z,h,R as ee,r as te,s as ne,v as ae}from"./index-CgdTuyLR.js";import{d as c,l as re,u as D}from"./db-CcU_202h.js";import{m as g,E as _}from"./time-BmRGZSiE.js";import{A as oe}from"./AppButton-BT87rAPg.js";import{u}from"./index-Bk94BvIa.js";import{u as T}from"./index-Dy4zg_J2.js";const V=T("shodoku.app.preferences.limit.due",50),M=T("shodoku.app.preferences.limit.new",10);async function se(e={new:M.value,due:V.value}){return await(await c).add("review-limits",{time:new Date,count:e}),re.postMessage("review-limit-increased")}const ie={class:"card-value"},ue=K({__name:"ReviewSummaryItem",props:{cardId:{},reviews:{}},setup(e){const n=e,t=y(()=>String.fromCharCode(n.cardId)),a=y(()=>n.reviews.at(0)),o=y(()=>a.value?a.value.log.state===u.New:!1);return(i,s)=>{const r=U("RouterLink");return l(),W(r,{to:p(G)(t.value),class:H(["review-summary-item",{"is-new":o.value}])},{default:E(()=>[I("strong",ie,x(t.value),1)]),_:1},8,["to","class"])}}}),ce=j(ue,[["__scopeId","data-v-15bfc4b2"]]),we={class:"review-summary"},de={key:0},le={class:"review-count total-count"},fe={class:"review-count new-count"},me={key:1,class:"review-summary-list"},ve=K({__name:"ReviewSummary",setup(e){const n=J(),t=X(),{result:a}=D(async()=>{const s=new Map,r=(await c).transaction("reviews").store.index("review");for await(const w of r.iterate(IDBKeyRange.lowerBound(g()))){const d=w.value;let f=s.get(d.cardId);f||(f=[],s.set(d.cardId,f)),f.push(d)}return s}),o=y(()=>{if(!a.value)return 0;let s=0;for(const[r]of a.value.values())r.log.state===u.New&&(s+=1);return s});function i(){se(),n.name!==ee&&t.push(te)}return(s,r)=>(l(),m("section",we,[p(a)?(l(),m("p",de,[r[3]||(r[3]=v(" Reviewed ")),I("span",le,x(p(a).size)+" cards",1),r[4]||(r[4]=v(" today")),o.value>0?(l(),m(B,{key:0},[r[1]||(r[1]=v(" (of which ")),I("span",fe,x(o.value)+" new",1),r[2]||(r[2]=v(")"))],64)):R("",!0),r[5]||(r[5]=v(". "))])):R("",!0),p(a)?(l(),m("ul",me,[(l(!0),m(B,null,Z(p(a),([w,d])=>(l(),m("li",null,[h(ce,{"card-id":w,reviews:d},null,8,["card-id","reviews"])]))),256))])):R("",!0),r[7]||(r[7]=I("p",null," Click the button below to temporarily increase your daily review limit. ",-1)),h(oe,{onClick:r[0]||(r[0]=w=>i())},{default:E(()=>r[6]||(r[6]=[v("Continue Review")])),_:1})]))}}),Ne=j(ve,[["__scopeId","data-v-e028f67f"]]);async function S(e){let n=0;for await(const t of await e)n+=1;return n}async function C(e){for await(const n of await e)return n}async function*F(e,n){let t=0;for await(const a of n){if(t>=e)return;yield a,t+=1}}async function*N(e){const n=new Set;let t=await(await c).transaction("progress").store.index("state+due").openCursor();for(;t;){const[a,o]=t.key;if(a<u.Learning){t=await t.continue([u.Learning,_]);continue}if(a>u.Learning&&a<u.Relearning){t=await t.continue([u.Relearning,_]);continue}if(!e||o<e){const[i]=t.primaryKey;n.has(i)||(yield t,n.add(i))}t=await t.continue()}}async function O(){const e=new Set,n=(await c).transaction("reviews").store.index("review").iterate(IDBKeyRange.lowerBound(g()));for await(const t of n)e.add(t.value.cardId);return e}async function P(){const e=new Date;return(await c).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([u.New,g()],[u.New,e],!0,!0))}async function*A(){const e=await O(),n=(await c).transaction(["cards","progress"],"readwrite"),t=n.objectStore("cards"),a=n.objectStore("progress").index("cardId+cardType+state");let o=await t.index("position").openKeyCursor(IDBKeyRange.bound([0,0],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY],!1,!0));for(;o;){if(e.has(o.primaryKey)){o=await o.continue();continue}let i=await a.openCursor([o.primaryKey,"kanji-write",u.New]);i||(i=await a.openCursor([o.primaryKey,"kanji-read",u.New])),i&&(yield i),o=await o.continue()}}async function Y(){const e=new Date;return(await c).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([u.Review,g()],[u.Review,e],!1,!0))}async function*$(){const e=new Date,n=await O(),t=(await c).transaction(["cards","progress","reviews"],"readonly"),a=t.objectStore("cards"),o=t.objectStore("progress"),i=IDBKeyRange.bound([u.Review,_],[u.Review,e],!1,!0);let s=await o.index("state+due").openCursor(i);for(;s;){const[r]=s.primaryKey;if(!n.has(r)){const w=await a.get(r);w&&w.position.priority<Number.POSITIVE_INFINITY&&(yield s)}s=await s.continue()}}async function q(){const e=await(await c).getAllFromIndex("review-limits","time",IDBKeyRange.lowerBound(g())),n={due:0,new:0};for(const{count:t}of e)n.due+=t.due,n.new+=t.new;return n}async function z(e=0){const n=await P(),t=Math.max(0,M.value+e-n);return S(F(t,A()))}async function Q(e=0){const n=await Y(),t=Math.max(0,V.value+e-n);return S(F(t,$()))}async function pe(){const e=await C(N(new Date));if(e)return e.value;const n=await q(),t=await z(n.new),a=await P(),o=await Q(n.due),i=await Y(),s=t+a,r=o+i,w=t+o,d=Math.ceil((s+r)/s),f=Math.floor(d/2);if(t>0&&(o===0||w%d===f)){const L=await C(A());if(L)return L.value}const b=await C($());if(b)return b.value;const k=await C(N());return k?k.value:null}async function ye(){const e=await q();return{new:await z(e.new),due:await Q(e.due),learning:await S(N())}}async function De(e,n,t){const a=(await c).transaction(["progress","reviews"],"readwrite"),o=a.objectStore("progress"),i=a.objectStore("reviews");await o.put({cardId:e,cardType:n,fsrs:t.card}),await i.add({cardId:e,cardType:n,log:t.log})}function Se(e){const n=y(()=>{const t=ae(e);if(t){const{cardId:a,cardType:o}=t;return async()=>(await c).get("progress",[a,o])}return pe});return D(n)}function be(){const{result:e,error:n}=D(ye);return ne(()=>{n.value&&console.error(n.value)}),e}export{Ne as R,Se as a,De as r,be as u};
