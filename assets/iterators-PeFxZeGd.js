async function o(i){let n=0;for await(const t of await i)n+=1;return n}async function e(i){for await(const n of await i)return n}async function*r(i,n){let t=0;for await(const a of n){if(t>=i)return;yield a,t+=1}}function*f(...i){const n=i.map(t=>t[Symbol.iterator]());try{let t=n.map(a=>a.next());for(;!t.some(({done:a})=>a);)yield t.map(({value:a})=>a),t=n.map(a=>a.next())}finally{n.forEach(t=>{typeof t.return=="function"&&t.return()})}}export{o as c,e as f,r as t,f as z};
