import{m as l,y as C,c as y,u as k,V as M}from"./index-iqwy-qSw.js";const w=(e,t)=>t.some(r=>e instanceof r);let b,B;function j(){return b||(b=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function O(){return B||(B=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const h=new WeakMap,I=new WeakMap,f=new WeakMap;function T(e){const t=new Promise((r,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",o)},a=()=>{r(u(e.result)),n()},o=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",o)});return f.set(t,e),t}function W(e){if(h.has(e))return;const t=new Promise((r,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",o),e.removeEventListener("abort",o)},a=()=>{r(),n()},o=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",o),e.addEventListener("abort",o)});h.set(e,t)}let v={get(e,t,r){if(e instanceof IDBTransaction){if(t==="done")return h.get(e);if(t==="store")return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return u(e[t])},set(e,t,r){return e[t]=r,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function L(e){v=e(v)}function N(e){return O().includes(e)?function(...t){return e.apply(g(this),t),u(this.request)}:function(...t){return u(e.apply(g(this),t))}}function F(e){return typeof e=="function"?N(e):(e instanceof IDBTransaction&&W(e),w(e,j())?new Proxy(e,v):e)}function u(e){if(e instanceof IDBRequest)return T(e);if(I.has(e))return I.get(e);const t=F(e);return t!==e&&(I.set(e,t),f.set(t,e)),t}const g=e=>f.get(e);function K(e,t,{blocked:r,upgrade:s,blocking:n,terminated:a}={}){const o=indexedDB.open(e,t),i=u(o);return s&&o.addEventListener("upgradeneeded",c=>{s(u(o.result),c.oldVersion,c.newVersion,u(o.transaction),c)}),r&&o.addEventListener("blocked",c=>r(c.oldVersion,c.newVersion,c)),i.then(c=>{a&&c.addEventListener("close",()=>a()),n&&c.addEventListener("versionchange",d=>n(d.oldVersion,d.newVersion,d))}).catch(()=>{}),i}const Q=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],m=new Map;function E(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(m.get(t))return m.get(t);const r=t.replace(/FromIndex$/,""),s=t!==r,n=R.includes(r);if(!(r in(s?IDBIndex:IDBObjectStore).prototype)||!(n||Q.includes(r)))return;const a=async function(o,...i){const c=this.transaction(o,n?"readwrite":"readonly");let d=c.store;return s&&(d=d.index(i.shift())),(await Promise.all([d[r](...i),n&&c.done]))[0]};return m.set(t,a),a}L(e=>({...e,get:(t,r,s)=>E(t,r)||e.get(t,r,s),has:(t,r)=>!!E(t,r)||e.has(t,r)}));const V=["continue","continuePrimaryKey","advance"],p={},D=new WeakMap,A=new WeakMap,_={get(e,t){if(!V.includes(t))return e[t];let r=p[t];return r||(r=p[t]=function(...s){D.set(this,A.get(this)[t](...s))}),r}};async function*H(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;t=t;const r=new Proxy(t,_);for(A.set(r,t),f.set(r,g(t));t;)yield r,t=await(D.get(r)||t.continue()),D.delete(r)}function x(e,t){return t===Symbol.asyncIterator&&w(e,[IDBIndex,IDBObjectStore,IDBCursor])||t==="iterate"&&w(e,[IDBIndex,IDBObjectStore])}L(e=>({...e,get(t,r,s){return x(t,r)?H:e.get(t,r,s)},has(t,r){return x(t,r)||e.has(t,r)}}));const Y=K("shodoku",5,{async upgrade(e,t,r,s){if(t<1){const n=e.createObjectStore("decks",{keyPath:"name"});n.createIndex("category","category"),n.createIndex("category+priority",["category","priority"]),n.createIndex("cards","cards",{multiEntry:!0});const a=e.createObjectStore("cards",{keyPath:"id"});a.createIndex("decks","decks",{multiEntry:!0}),a.createIndex("position",["position.priority","position.order"]);const o=e.createObjectStore("progress",{keyPath:["cardId","cardType"]});o.createIndex("cardId+cardType+state",["cardId","cardType","fsrs.state"]),o.createIndex("state+due",["fsrs.state","fsrs.due"]);const i=e.createObjectStore("reviews",{keyPath:"id",autoIncrement:!0});i.createIndex("cardId","cardId"),i.createIndex("review","log.review"),i.createIndex("state+review",["log.state","log.review"])}if(t<2&&e.createObjectStore("review-limits",{keyPath:"id",autoIncrement:!0}).createIndex("time","time"),t<3&&e.createObjectStore("bookmarked-words",{keyPath:"wordId"}),t<4){const n=s.objectStore("bookmarked-words");if(n.createIndex("reading","reading"),n.createIndex("bookmarkedAt","bookmarkedAt"),t>=3){const a=await n.getAllKeys();for(const o of a)n.put({wordId:o,bookmarkedAt:new Date})}}if(t<5){const n=s.objectStore("decks");n.createIndex("createdAt","createdAt");const a=s.objectStore("cards");if(a.createIndex("createdAt","createdAt"),t>=4){const o=new Date;for await(const i of n.iterate()){const c=i.value;c.active=!0,c.createdAt=o,await i.update(c)}for await(const i of a.iterate()){const c=i.value;c.createdAt=o,await i.update(c)}}}}}),S="live-query-channel",P=new BroadcastChannel(S),$=new BroadcastChannel(S);function z(e){const t=l(!0),r=l(null),s=l(null);async function n(){t.value=!0,s.value=null;const a=k(e);try{r.value=await a()}catch(o){s.value=o,r.value=null}finally{t.value=!1}}return P.addEventListener("message",n),C(()=>k(e),n,{immediate:!0}),M(()=>{P.removeEventListener("message",n)}),{error:y(()=>s.value),result:y(()=>r.value),loading:y(()=>t.value)}}export{Y as d,$ as l,z as u};
