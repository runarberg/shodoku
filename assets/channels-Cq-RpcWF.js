const h=(e,t)=>t.some(r=>e instanceof r);let b,g;function v(){return b||(b=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function L(){return g||(g=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const m=new WeakMap,I=new WeakMap,f=new WeakMap;function C(e){const t=new Promise((r,s)=>{const n=()=>{e.removeEventListener("success",c),e.removeEventListener("error",o)},c=()=>{r(u(e.result)),n()},o=()=>{s(e.error),n()};e.addEventListener("success",c),e.addEventListener("error",o)});return f.set(t,e),t}function M(e){if(m.has(e))return;const t=new Promise((r,s)=>{const n=()=>{e.removeEventListener("complete",c),e.removeEventListener("error",o),e.removeEventListener("abort",o)},c=()=>{r(),n()},o=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",c),e.addEventListener("error",o),e.addEventListener("abort",o)});m.set(e,t)}let w={get(e,t,r){if(e instanceof IDBTransaction){if(t==="done")return m.get(e);if(t==="store")return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return u(e[t])},set(e,t,r){return e[t]=r,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function E(e){w=e(w)}function S(e){return L().includes(e)?function(...t){return e.apply(l(this),t),u(this.request)}:function(...t){return u(e.apply(l(this),t))}}function j(e){return typeof e=="function"?S(e):(e instanceof IDBTransaction&&M(e),h(e,v())?new Proxy(e,w):e)}function u(e){if(e instanceof IDBRequest)return C(e);if(I.has(e))return I.get(e);const t=j(e);return t!==e&&(I.set(e,t),f.set(t,e)),t}const l=e=>f.get(e);function A(e,t,{blocked:r,upgrade:s,blocking:n,terminated:c}={}){const o=indexedDB.open(e,t),i=u(o);return s&&o.addEventListener("upgradeneeded",a=>{s(u(o.result),a.oldVersion,a.newVersion,u(o.transaction),a)}),r&&o.addEventListener("blocked",a=>r(a.oldVersion,a.newVersion,a)),i.then(a=>{c&&a.addEventListener("close",()=>c()),n&&a.addEventListener("versionchange",d=>n(d.oldVersion,d.newVersion,d))}).catch(()=>{}),i}const O=["get","getKey","getAll","getAllKeys","count"],T=["put","add","delete","clear"],y=new Map;function k(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(y.get(t))return y.get(t);const r=t.replace(/FromIndex$/,""),s=t!==r,n=T.includes(r);if(!(r in(s?IDBIndex:IDBObjectStore).prototype)||!(n||O.includes(r)))return;const c=async function(o,...i){const a=this.transaction(o,n?"readwrite":"readonly");let d=a.store;return s&&(d=d.index(i.shift())),(await Promise.all([d[r](...i),n&&a.done]))[0]};return y.set(t,c),c}E(e=>({...e,get:(t,r,s)=>k(t,r)||e.get(t,r,s),has:(t,r)=>!!k(t,r)||e.has(t,r)}));const W=["continue","continuePrimaryKey","advance"],B={},D=new WeakMap,P=new WeakMap,N={get(e,t){if(!W.includes(t))return e[t];let r=B[t];return r||(r=B[t]=function(...s){D.set(this,P.get(this)[t](...s))}),r}};async function*V(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;t=t;const r=new Proxy(t,N);for(P.set(r,t),f.set(r,l(t));t;)yield r,t=await(D.get(r)||t.continue()),D.delete(r)}function x(e,t){return t===Symbol.asyncIterator&&h(e,[IDBIndex,IDBObjectStore,IDBCursor])||t==="iterate"&&h(e,[IDBIndex,IDBObjectStore])}E(e=>({...e,get(t,r,s){return x(t,r)?V:e.get(t,r,s)},has(t,r){return x(t,r)||e.has(t,r)}}));const F=A("shodoku",4,{async upgrade(e,t,r,s){if(t<1){const n=e.createObjectStore("decks",{keyPath:"name"});n.createIndex("category","category"),n.createIndex("category+priority",["category","priority"]),n.createIndex("cards","cards",{multiEntry:!0});const c=e.createObjectStore("cards",{keyPath:"id"});c.createIndex("decks","decks",{multiEntry:!0}),c.createIndex("position",["position.priority","position.order"]);const o=e.createObjectStore("progress",{keyPath:["cardId","cardType"]});o.createIndex("cardId+cardType+state",["cardId","cardType","fsrs.state"]),o.createIndex("state+due",["fsrs.state","fsrs.due"]);const i=e.createObjectStore("reviews",{keyPath:"id",autoIncrement:!0});i.createIndex("cardId","cardId"),i.createIndex("review","log.review"),i.createIndex("state+review",["log.state","log.review"])}if(t<2&&e.createObjectStore("review-limits",{keyPath:"id",autoIncrement:!0}).createIndex("time","time"),t<3&&e.createObjectStore("bookmarked-words",{keyPath:"wordId"}),t<4){const n=s.objectStore("bookmarked-words");if(n.createIndex("reading","reading"),n.createIndex("bookmarkedAt","bookmarkedAt"),t>=3){const c=await n.getAllKeys();for(const o of c)n.put({wordId:o,bookmarkedAt:new Date})}}}}),p="live-query-channel",K=new BroadcastChannel(p),R=new BroadcastChannel(p);export{K as a,F as d,R as l};
