(function(){"use strict";function l(n,...a){return a.reduce((t,e)=>e(t),n)}function*p(...n){const a=n.map(t=>t[Symbol.iterator]());try{let t=a.map(e=>e.next());for(;!t.some(({done:e})=>e);)yield t.map(({value:e})=>e),t=a.map(e=>e.next())}finally{a.forEach(t=>{typeof t.return=="function"&&t.return()})}}function h(n){return a=>{const t=new Map;for(const e of a){const s=n(e);let r=t.get(s);r||(r=[],t.set(s,r)),r.push(e)}return t}}function m(){return n=>[...n]}function*w(n,a,t=1){let e=n,s=a;typeof e>"u"&&(s=Number.POSITIVE_INFINITY,e=0),typeof s>"u"&&(s=e,e=0);const r=e<=s?(o,i)=>o<i:(o,i)=>i<o;for(let o=e;r(o,s);o+=t)yield o}function f(){return n=>p(w(),n)}const y="␟",g="␞",S=fetch("/data/index/kanji-radicals-v1.usv").then(n=>n.text()),d=fetch("/data/index/radicals-kanji-v1.usv").then(n=>n.text());function*u(n){const a=n[Symbol.iterator]();let t=0,e=a.next();function s(){e=a.next()}function*r(){let o=t;for(e.value===`
`&&(t+=1,o=t,e=a.next());!e.done;){const i=e.value;if(i===g){t+=i.length;return}i===y&&(yield n.slice(o,t),o=t+i.length),t+=i.length,s()}}for(;!e.done;)yield r(),s()}async function k(){const n=await d,a=new Map;for(const t of u(n)){let e="";for(const[s,r]of l(t,f()))if(s===0)e=r;else if(s===1){const o=Number.parseInt(r);let i=a.get(o);i||(i=[],a.set(o,i)),i.push(e)}}return a}async function b(n){let a=null;if(n.size===0)return new Set;let t=0,e=null;e:for(const s of u(await d))for(const[r,o]of l(s,f()))switch(r){case 0:n.has(o)?(e=o,t+=1):e=null;break;case 2:if(e){if(a){const i=new Set;for(const c of o)a.has(c)&&i.add(c);a=i}else{a=new Set;for(const i of o)a.add(i)}if(t===n.size)break e}}return a??new Set}async function I(n){const a=new Map,t=new Set;let e=0,s=null;e:for(const r of u(await S))for(const[o,i]of l(r,f()))switch(o){case 0:n.has(i)?(s=i,e+=1):s=null;break;case 1:s&&a.set(s,Number.parseInt(i));break;case 2:if(s){for(const c of i)t.add(c);if(e===n.size)break e}}return[a,t]}addEventListener("message",async n=>{if(n.data==="init"){const i={type:"all-radicals",allRadicals:await k()};self.postMessage(i);return}const a=await b(n.data),[t,e]=await I(a),r={type:"kanji-selection",kanjiSelection:l(a,h(o=>t.get(o)??NaN),m(),o=>new Map(o.sort(([i],[c])=>i-c))),filteredRadicals:e};self.postMessage(r)})})();
