import{u as i}from"./index-guFvHVik.js";import{d as u,u as S}from"./db-Bi06ATXP.js";import{g as B,l as b,m as F}from"./index-1Esrt7dj.js";async function I(t){let e=0;for await(const n of await t)e+=1;return e}async function l(t){for await(const e of await t)return e}async function*M(t,e){let n=0;for await(const a of e){if(n>=t)return;yield a,n+=1}}const m=1e3,f=60*m,g=60*f,c=24*g,v=7*c,y=29.53*c,p=365.2425*c,C=new Date(0);function R(t=new Date){return new Date(t.getFullYear(),t.getMonth(),t.getDate())}function P(t){const e=Math.abs(t);return e<1.5*f?{unit:"second",multiplier:m,value:t/m}:e<1.5*g?{unit:"minute",multiplier:f,value:t/f}:e<1.5*c?{unit:"hour",multiplier:g,value:t/g}:e<v?{unit:"day",multiplier:c,value:t/c}:e<y?{unit:"week",multiplier:v,value:t/v}:e<p?{unit:"month",multiplier:y,value:t/y}:{unit:"year",multiplier:p,value:t/p}}const Y=new Intl.RelativeTimeFormat("default",{numeric:"always",style:"short"});function Q(t){const{unit:e,value:n}=P(t);return Y.format(Math.round(n),e)}const _=10,V=50;async function*D(t){const e=new Set;let n=await(await u).transaction("progress").store.index("state+due").openCursor();for(;n;){const[a,r]=n.key;if(a<i.Learning){n=await n.continue([i.Learning,C]);continue}if(a>i.Learning&&a<i.Relearning){n=await n.continue([i.Relearning,C]);continue}if(!t||r<t){const[o]=n.primaryKey;e.has(o)||(yield n,e.add(o))}n=await n.continue()}}async function E(){const t=new Set,e=(await u).transaction("reviews").store.index("review").iterate(IDBKeyRange.lowerBound(R()));for await(const n of e)t.add(n.value.cardId);return t}async function K(){const t=new Date;return(await u).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([i.New,R()],[i.New,t],!0,!0))}async function*T(){const t=await E(),e=(await u).transaction(["cards","progress"],"readwrite"),n=e.objectStore("cards"),a=e.objectStore("progress").index("cardId+cardType+state");let r=await n.index("position").openKeyCursor();for(;r;){if(t.has(r.primaryKey)){r=await r.continue();continue}let o=await a.openCursor([r.primaryKey,"kanji-write",i.New]);o||(o=await a.openCursor([r.primaryKey,"kanji-read",i.New])),o&&(yield o),r=await r.continue()}}async function L(){const t=new Date;return(await u).transaction("reviews").store.index("state+review").count(IDBKeyRange.bound([i.Review,R()],[i.Review,t],!1,!0))}async function*j(){const t=new Date,e=await E(),n=(await u).transaction(["cards","progress","reviews"],"readonly"),a=n.objectStore("cards"),r=n.objectStore("progress"),o=IDBKeyRange.bound([i.Review,C],[i.Review,t],!1,!0);let s=await r.index("state+due").openCursor(o);for(;s;){const[w]=s.primaryKey;if(!e.has(w)){const d=await a.get(w);d&&d.position.priority<Number.POSITIVE_INFINITY&&(yield s)}s=await s.continue()}}async function O(){const t=await K(),e=Math.max(0,_-t);return I(M(e,T()))}async function k(){const t=await L(),e=Math.max(0,V-t);return I(M(e,j()))}async function W(){const t=await l(D(new Date));if(t)return t.value;const e=await O(),n=await K(),a=await k(),r=await L(),o=e+n,s=a+r,w=Math.ceil((o+s)/o),d=Math.floor(w/2);if(e>0&&(a===0||a%w===d)){const N=await l(T());if(N)return N.value}const x=await l(j());if(x)return x.value;const h=await l(D());return h?h.value:null}async function A(){return{new:await O(),due:await k(),learning:await I(D())}}async function z(t,e,n){const a=(await u).transaction(["progress","reviews"],"readwrite"),r=a.objectStore("progress"),o=a.objectStore("reviews");await r.put({cardId:t,cardType:e,fsrs:n.card}),await o.add({cardId:t,cardType:e,log:n.log})}function G(t){const e=B(()=>{const r=F(t);if(r){const{cardId:o,cardType:s}=r;return async()=>(await u).get("progress",[o,s])}return W}),{value:n,error:a}=S(e);return b(()=>{a.value&&console.error(a.value)}),n}function J(){const{value:t,error:e}=S(A);return b(()=>{e.value&&console.error(e.value)}),t}export{G as a,Q as f,z as r,J as u};
